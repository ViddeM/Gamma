buildscript {
    ext {
        springBootVersion = "2.5.5"
        springVersion = "5.5.2"
        recordBuilderVersion = "1.19"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id "java"
    id "eclipse"
    id "application"
    id "checkstyle"
    id "pmd"
//    id "jacoco"
    id "nebula.lint" version "16.7.0"
}

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
group = "it.chalmers"
version = "1.0.0-SNAPSHOT"
sourceCompatibility = 17
mainClassName = "it.chalmers.gamma.GammaApplication"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor(
            "io.soabase.record-builder:record-builder-processor:${recordBuilderVersion}"
    )

     implementation(
            "org.springframework:spring-tx:5.3.10",
            "org.springframework.security:spring-security-core:5.5.1",
            "org.springframework.security:spring-security-web:5.5.1",
            "org.springframework.boot:spring-boot-starter-security:2.5.5",
            "org.springframework.security:spring-security-oauth2-authorization-server:0.2.1",
            "org.springframework:spring-beans:5.3.10",
            "org.springframework.data:spring-data-jpa:2.5.4",
            "org.springframework:spring-core:5.3.10",
            "org.springframework:spring-web:5.3.10",
            "org.springframework:spring-context:5.3.10",
            "org.springframework:spring-webmvc:5.3.10",
            "org.springframework.security:spring-security-config:5.5.1",
            "org.springframework.boot:spring-boot-autoconfigure:2.5.5",
            "org.springframework.session:spring-session-core:2.5.2",
            "org.springframework.boot:spring-boot:2.5.5",
            "org.springframework.boot:spring-boot-starter-validation:2.5.5",
//            "org.hibernate:hibernate-core:5.4.30.Final",
             "org.apache.tomcat.embed:tomcat-embed-core:9.0.54",
//            "org.jboss.spec.javax.transaction:jboss-transaction-api_1.2_spec:1.1.1.Final",
            "org.apache.httpcomponents:httpcore:4.4.14",
            "javax.persistence:javax.persistence-api:2.2",
            'org.apache.httpcomponents:httpclient:4.5.13',
            "javax.transaction:javax.transaction-api:1.3",
            'org.slf4j:slf4j-api:1.7.32',
            'com.fasterxml.jackson.core:jackson-annotations:2.13.0',
            'com.fasterxml.jackson.core:jackson-databind:2.13.0',
            'com.fasterxml.jackson.core:jackson-core:2.13.0',
            "com.googlecode.json-simple:json-simple:1.1.1",
            "io.jsonwebtoken:jjwt:0.9.1",
            "commons-io:commons-io:2.6",
            "org.apache.httpcomponents:httpmime:4.5.12",
            "io.soabase.record-builder:record-builder-core:${recordBuilderVersion}",
             "javax.servlet:servlet-api:2.5",
             "javax.servlet:javax.servlet-api:4.0.1"
    )

    runtimeOnly(
            "org.springframework.boot:spring-boot-devtools:2.5.5",
            "org.springframework.boot:spring-boot-starter-data-jpa:2.5.5",
            "org.springframework.boot:spring-boot-starter-web:2.5.5",
            "org.springframework.boot:spring-boot-starter-data-redis:2.5.5",
            "org.springframework.session:spring-session-data-redis:2.5.2",
            "org.springframework.boot:spring-boot-starter-thymeleaf:2.5.5",
            "org.postgresql:postgresql:42.2.24",
            "org.flywaydb:flyway-core:7.14.1"
    )

    testImplementation(
            "org.springframework:spring-test:5.3.10",
            "org.springframework.security:spring-security-test:5.5.1",
            "org.springframework.boot:spring-boot-test-autoconfigure:2.5.5",
            "org.springframework.boot:spring-boot-starter-test:2.5.5",
            "com.tngtech.archunit:archunit:0.21.0",
    )

    /*
    testRuntimeOnly(
            "com.h2database:h2:1.4.200",
    )
     */
}

test {
    useJUnitPlatform()
}

repositories {
    mavenCentral()
}

checkstyle {
    toolVersion = "8.11"
    ignoreFailures = false
    maxWarnings = 0
    configFile = project(":").file("config/checkstyle/checkstyle.xml")
    configProperties = ["suppressionFile": project(":").file("config/checkstyle/suppressions.xml")]
}

pmd {
    toolVersion = "6.21.0"
    consoleOutput = false
    ignoreFailures = false
    ruleSets = []
    ruleSetConfig = resources.text.fromFile("./config/pmd/ruleset.xml")
}

// Is not perfect, but gives you an idea of what needs to be changed
//gradleLint {
//    rules = ["dependency-parentheses", "archaic-wrapper"]
//}
