buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:3.0.1"
    }
}

plugins {
    id "java"
    id "eclipse"
    id "application"
    id "checkstyle"
    id "pmd"
    id "nebula.lint" version "16.7.0"
}

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
group = "it.chalmers"
version = "1.0.0-SNAPSHOT"
sourceCompatibility = 19
mainClassName = "it.chalmers.gamma.GammaApplication"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor(
            "io.soabase.record-builder:record-builder-processor:32",
            "org.springframework.boot:spring-boot-configuration-processor:3.0.2"
    )

     implementation(
            "com.googlecode.json-simple:json-simple:1.1.1",
            "commons-io:commons-io:2.11.0",
            "io.jsonwebtoken:jjwt:0.9.1",
            "io.soabase.record-builder:record-builder-core:35",
            "org.apache.httpcomponents:httpcore:4.4.15",
            "org.apache.httpcomponents:httpmime:4.5.14",
            "org.apache.tomcat.embed:tomcat-embed-core:10.1.4",
            "org.postgresql:postgresql:42.5.1",
            "org.springframework.boot:spring-boot-autoconfigure:3.0.1",
            "org.springframework.boot:spring-boot-starter-data-jpa:3.0.1",
            "org.springframework.boot:spring-boot-starter-security:3.0.1",
            "org.springframework.boot:spring-boot-starter-validation:3.0.1",
            "org.springframework.boot:spring-boot:3.0.1",
            "org.springframework.data:spring-data-jpa:3.0.0",
            "org.springframework.security:spring-security-config:6.0.1",
            "org.springframework.security:spring-security-core:6.0.1",
            "org.springframework.security:spring-security-oauth2-authorization-server:1.0.0",
            "org.springframework.security:spring-security-web:6.0.1",
            "org.springframework.session:spring-session-core:3.0.0",
            "org.springframework:spring-beans:6.0.3",
            "org.springframework:spring-context:6.0.3",
            "org.springframework:spring-core:6.0.3",
            "org.springframework:spring-tx:6.0.3",
            "org.springframework:spring-webmvc:6.0.3",
            "org.springframework:spring-websocket:6.0.3",
            'com.fasterxml.jackson.core:jackson-annotations:2.14.0',
            'com.fasterxml.jackson.core:jackson-core:2.14.0',
            'com.fasterxml.jackson.core:jackson-databind:2.14.0',
            'org.apache.httpcomponents:httpclient:4.5.14',
            'org.springframework.data:spring-data-redis:3.0.1'
    )

    runtimeOnly(
            "org.flywaydb:flyway-core:9.11.0",
            "org.springframework.boot:spring-boot-devtools:3.0.1",
            "org.springframework.boot:spring-boot-starter-data-jpa:3.0.1",
            "org.springframework.boot:spring-boot-starter-data-redis:3.0.1",
            "org.springframework.boot:spring-boot-starter-thymeleaf:3.0.1",
            "org.springframework.boot:spring-boot-starter-web:3.0.1",
            "org.springframework.session:spring-session-data-redis:3.0.0",
    )

    testImplementation(
            "com.tngtech.archunit:archunit:1.0.0",
            "io.rest-assured:json-path:5.3.0",
            "io.rest-assured:rest-assured:5.3.0",
            "io.rest-assured:xml-path:5.3.0",
            "org.flywaydb:flyway-core:9.11.0",
            "org.mockito:mockito-inline:4.11.0",
            "org.springframework.boot:spring-boot-starter-test:3.0.1",
            "org.springframework.security:spring-security-test:5.7.3",
            "org.testcontainers:junit-jupiter:1.17.6",
            "org.testcontainers:postgresql:1.17.6",
    )
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:1.16.3"
    }
}

test {
    useJUnitPlatform()
}

repositories {
    mavenCentral()
}

checkstyle {
    toolVersion = "8.11"
    ignoreFailures = false
    maxWarnings = 0
    configFile = project(":").file("config/checkstyle/checkstyle.xml")
    configProperties = ["suppressionFile": project(":").file("config/checkstyle/suppressions.xml")]
}

pmd {
    toolVersion = "6.21.0"
    consoleOutput = false
    ignoreFailures = false
    ruleSets = []
    ruleSetConfig = resources.text.fromFile("./config/pmd/ruleset.xml")
}

// Is not perfect, but gives you an idea of what needs to be changed
//gradleLint {
//    rules = ["dependency-parentheses", "archaic-wrapper"]
//}
